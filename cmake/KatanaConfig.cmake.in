# Config file for the Katana package
#
# It exports the following targets:
#   Katana::galois
#   Katana::dist
#   ...
#   (see KatanaTargets.cmake for all of them)
#
# It defines the following variables for legacy importing:
#   Katana_INCLUDE_DIRS
#   Katana_LIBRARIES
#   Katana_LIBRARY_DIRS
#   Katana_BIN_DIRS
include(CMakeFindDependencyMacro)

@PACKAGE_INIT@

set_and_check(Katana_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set_and_check(Katana_LIBRARY_DIRS "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
set_and_check(Katana_BIN_DIRS "@PACKAGE_CMAKE_INSTALL_BINDIR@")
set(Katana_LIBRARIES katana_galois)

get_filename_component(KATANA_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

###### dependencies ######

find_dependency(fmt REQUIRED)
find_dependency(Threads REQUIRED)
find_dependency(Boost 1.58.0 REQUIRED COMPONENTS serialization iostreams filesystem)
find_dependency(Backward REQUIRED)

if (@NUMA_FOUND@)
  # This is effectively `find_dependency(NUMA)` however amp could not find a
  # clean way to install this cmake file to make that work.
  include("${KATANA_CMAKE_DIR}/FindNUMA.cmake")
endif()

find_dependency(AWSSDK REQUIRED COMPONENTS transfer)
find_dependency(nlohmann_json REQUIRED)
find_dependency(CURL REQUIRED)

find_dependency(Arrow REQUIRED)
get_filename_component(ARROW_CONFIG_DIR ${Arrow_CONFIG} DIRECTORY)
find_dependency(Parquet HINTS ${ARROW_CONFIG_DIR})

if (@KATANA_ENABLE_VTUNE@)
  find_dependency(VTune REQUIRED)
endif()

if (@KATANA_ENABLE_PAPI@)
  find_dependency(PAPI REQUIRED)
endif()

if (NOT Katana::galois)
  include("${KATANA_CMAKE_DIR}/KatanaTargets.cmake")
endif()

check_required_components(Boost)
check_required_components(AWSSDK)
check_required_components(nlohmann_json)
check_required_components(Backward)

@KATANA_ENTERPRISE_CMAKE_ADDITIONS@
